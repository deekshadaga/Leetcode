class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int,vector<int>> adjList;
        vector<int> indegree(numCourses,0);
        for(auto edge: prerequisites){
            adjList[edge[1]].push_back(edge[0]);
            indegree[edge[0]]++;
        }
        vector<int> order;
        queue<int> q;
        for(int i=0;i<numCourses;i++){
            if(indegree[i]==0) q.push(i);
        }
        while(!q.empty()){
            int curr = q.front();
            q.pop();
            order.push_back(curr);
            for(auto edge: adjList[curr]){
                indegree[edge]--;
                if(indegree[edge]==0) 
                    q.push(edge);
            }
        }
        if(order.size()==numCourses) return order;
        return {};
    }
};
