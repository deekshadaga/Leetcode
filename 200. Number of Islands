class Solution {
public:
    void dfs(int n, int m, int row, int col, vector<vector<int>>& vis, vector<vector<char>>& grid){
        if(row<0 || row>=n || col>=m || col<0 || vis[row][col] || grid[row][col]!='1') return;
        vis[row][col]=1;
        dfs(n,m,row+1,col,vis,grid);
        dfs(n,m,row-1,col,vis,grid);
        dfs(n,m,row,col+1,vis,grid);
        dfs(n,m,row,col-1,vis,grid);
        return;    
    }
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        int m= grid[0].size();
        int cnt = 0; 
        vector<vector<int>> vis(n,vector<int>(m,0));
        for(int i = 0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1' && !vis[i][j] ){
                    cnt++;
                    dfs(n,m,i,j,vis,grid);
                }
            }
        }
        return cnt;
    }
};
