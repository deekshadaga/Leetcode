/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(k==1 || head == NULL ) return head;
        int cnt=0;
        ListNode* dummy = new ListNode(0);
        dummy->next=head;
        ListNode *p=dummy,*c=dummy,*n=dummy;
        while(c->next){
            c=c->next;
            cnt++;
        }
        while(cnt>=k){
            c=p->next;
            n=c->next;
            for(int i=1;i<k;i++){
                c->next = n->next;
                n->next = p->next;
                p->next = n;
                n = c->next;
            }
            p=c;
            cnt-=k;
        }
        return dummy->next;
    }
};
