class Solution {
public:
    void checkNeighbours(int r,int c, int n,int m, vector<vector<int>>& board){
        vector<int> row = {-1,-1,-1,0,0,1,1,1};
        vector<int> col = {-1,0,1,-1,1,-1,0,1};
        int live=0;
        for(int i=0 ; i<8 ; i++){
            int tempr = r+row[i];
            int tempc = c+col[i];
            if(tempr>=0 && tempr<m && tempc >=0 && tempc<n && (board[tempr][tempc]==1 || board[tempr][tempc]==3)){
                live++;
            }
        }
        if(board[r][c]==0 && live == 3){
            board[r][c] = 2;
        }
        if(board[r][c]==1 && (live < 2 || live>3)) {
            board[r][c] = 3;
        }
        return;
    }
    void gameOfLife(vector<vector<int>>& board) {
        int m = board.size();
        int n = board[0].size();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                checkNeighbours(i,j,n,m,board);
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]==2) board[i][j]=1;
                if(board[i][j]==3) board[i][j]=0;
            }
        }
        return;
    }
};
